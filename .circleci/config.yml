version: 2.1

executors:
  docker-executor:
    docker:
      - image: circleci/openjdk:17  # OpenJDK 17 이미지 사용
    working_directory: ~/repo

jobs:
  build:
    executor: docker-executor
    steps:
      - checkout  # GitHub에서 소스 코드 가져오기
      - run:
          name: Install Gradle
          command: |
            curl -sSL https://get.gradle.org/download/gradle-7.4-bin.zip -o gradle.zip
            unzip gradle.zip
            sudo mv gradle-7.4 /opt/gradle
            export PATH=$PATH:/opt/gradle/bin
      - run:
          name: Build Spring Boot Application with Gradle
          command: ./gradlew clean build -x test  # Gradle로 빌드

  docker_build:
    executor: docker-executor
    docker:
      - image: circleci/openjdk:17  # Docker 빌드를 위한 OpenJDK 17
    steps:
      - checkout
      - run:
          name: Build Docker Image
          command: ./gradlew buildDocker  # Gradle을 통해 Docker 이미지 빌드
      - run:
          name: Push Docker Image to DockerHub
          command: |
            docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
            docker push aktmzm20/springboot-app:${CIRCLE_SHA1}

  deploy:
    executor: docker-executor
    docker:
      - image: circleci/python:3.8  # kubectl을 사용할 수 있는 이미지
    steps:
      - checkout
      - run:
          name: Install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
      - run:
          name: Apply Kubernetes Manifests
          command: |
            kubectl apply -f deployment.yml
            kubectl apply -f service.yml

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - docker_build:
          requires:
            - build
      - deploy:
          requires:
            - docker_build